name: "GitHub release"

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*.*.*' # Push events to matching semantic version tags 1.0.0, etc.

jobs:
  semver-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2
      - name: Check SemVer tag
        run: |
          TAG_NAME=$(git tag --points-at ${{ github.sha }})
          if [[ "$TAG_NAME" =~ ^[0-9]+\.[0-9]+\.[0-9]+(?:(?:[_.-])?(?:a|b|rc|alpha|beta|c|pre|preview)\d+)?(?:\.post\d+)?(?:\.dev\d+)?$ ]]; then
            echo "Valid SemVer tag: $TAG_NAME"
          else
            echo "Invalid SemVer tag: $TAG_NAME"
            exit 1
          fi
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: semver-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.2
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  release-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Set up Python 3.10
        uses: actions/setup-python@v4.7.1
        with:
          python-version: "3.10"
      - name: Install build requirements
        run: >-
          python -m
          pip install -U
          pip
          build
          wheel
          --user
      - name: Build a binary wheel
        run: >-
          python -m
          build
          --wheel
          --outdir dist/
          .
      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.whl
          asset_name: "${{ github.event.repository.name }}-${{ github.ref }}-py3-none-any.whl"
